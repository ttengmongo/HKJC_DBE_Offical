---
- name: Create the First Ops Mgr User
  uri:
    url: "{{ ops_mgr_api_endpoint_unauth_users }}/?pretty=true&accessList={{ unauth_users_param_accessList }}"
    method: POST
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    body_format: json
    body: |
      {
        "username": "{{ unauth_users_param_username }}",
        "password": "{{ unauth_users_param_password }}",
        "firstName": "{{ unauth_users_param_first_name }}",
        "lastName": "{{ unauth_users_param_last_name }}"
      }
    status_code: [201, 409]  # 201: Created Successfully, 409: A user with username 'mmsadmin' already exists
    validate_certs: false
  register: create_first_ops_mgr_user_response

- name: Print create_first_ops_mgr_user_response
  debug:
    msg: "{{ create_first_ops_mgr_user_response }}"

- name: Write global_owner_public_key, global_owner_private_key into {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}
  block:
    - name: Define global_owner_public_key, global_owner_private_key
      set_fact:
        global_owner_public_key: "{{ create_first_ops_mgr_user_response.json.programmaticApiKey.publicKey }}"
        global_owner_private_key: "{{ create_first_ops_mgr_user_response.json.programmaticApiKey.privateKey }}"

    - name: Print global_owner_public_key, global_owner_private_key
      debug:
        msg: "global_owner_public_key={{ global_owner_public_key }}, global_owner_private_key={{ global_owner_private_key }}"

    - name: Create dir {{ ops_mgr_api_tmp_path }}
      file:
        path: '{{ ops_mgr_api_tmp_path }}'
        state: directory
        mode: '0777'
        owner: root
        group: root

    - name: Check if exists {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}
      stat:
        path: "{{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}"
      register: check_stat_result

    - name: Create file {{ ops_mgr_global_api_key_json }} and write into global_api_keys
      block:
        - name: Create {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }} if not exists
          file:
            path: "{{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}"
            state: touch
            mode: '0644'
            owner: root
            group: root

        - name: Use jq to update the file {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}
          shell: |
            jq -n '{"global_api_keys": {"global_owner_api_key": {"public_key": "{{ global_owner_public_key }}", "private_key": "{{ global_owner_private_key }}"}}}' \ 
            > {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}
          register: update_ops_mgr_api_keys_result

        - name: Print update_ops_mgr_api_keys_result
          debug:
            var: update_ops_mgr_api_keys_result
      when: not check_stat_result.stat.exists
  when: create_first_ops_mgr_user_response.status == 201

- name: Get global_owner_public_key by jq from {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}
  shell: cat {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }} | jq '.global_api_keys.global_owner_api_key.public_key' | tr -d '"'
  register: global_owner_public_key_result

- name: Get global_owner_private_key by jq from {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}
  shell: cat {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }} | jq '.global_api_keys.global_owner_api_key.private_key' | tr -d '"'
  register: global_owner_private_key_result

- name: Print global_owner_public_key, global_owner_private_key which are read from {{ ops_mgr_api_tmp_path }}/{{ ops_mgr_global_api_key_json }}
  debug:
    msg: "global_owner_public_key={{ global_owner_public_key_result.stdout }}, global_owner_private_key={{ global_owner_private_key_result.stdout }}"